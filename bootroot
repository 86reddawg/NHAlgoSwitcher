#!/usr/bin/python

import subprocess, re, sys, os


def runcmd(stringcmd):
    cmdrun = subprocess.Popen(stringcmd, stdout=subprocess.PIPE, shell=True)
    return cmdrun.stdout.read()

def xorgconf(name, pci):
    xorgconf="""Section "ServerLayout"
    Identifier	\""""+name+"""\"
    Screen 0	"Screen0"
EndSection

Section "Device"
    Identifier	"Device0"
    Driver	"nvidia"
    VendorName	"NVIDIA Corporation"
    BusID	\""""+pci+"""\"
    Option	"Coolbits"       "12"
    Option	"AllowEmptyInitialConfiguration"
EndSection

Section "Screen"
    Identifier	"Screen0"
    Device	"Device0"
EndSection
"""
    return xorgconf

if os.geteuid()!=0:
    print("Run this script as root")
    sys.exit(1)


gpu_list=runcmd("nvidia-smi --query-gpu=index,pci.bus_id,uuid,name --format=csv,noheader")
matches = re.findall(
    r"(?P<idx>\d*), (?P<pci>.*), (?P<uuid>.*), (?P<name>.*)",
    gpu_list
)

numberofcards=len(matches)

print("Found "+str(numberofcards)+" cards")
if numberofcards==0:
    print("No cards found")
    sys.exit(0)

else:
    for card in matches:
	try:
	    gpu_idx=int(card[0])
	    pci=card[1]
	    uuid=card[2]
	    name=card[3]
	    domain=int(pci.split(":")[0],16)
	    bus=int(pci.split(":")[1],16)
	    device=int(pci.split(":")[2].split(".")[0],16)
	    function=int(pci.split(":")[2].split(".")[0],16)
	    address="PCI:"+str(bus)+"@"+str(domain)+":"+str(device)+":"+str(function)
	    #bus@domain:device:function
	except Exception:
	    print("Error parsing nvidia-smi query")
	    sys.exit(1)
	try:
	    with open("/etc/X11/xorg"+str(gpu_idx)+".conf", "w") as outfile:
		outfile.write(xorgconf("GPU"+str(gpu_idx)+":"+uuid,address))
	except IOError, ex:
	    print("Error writing xorg[].conf file")
	    print(ex)
	    sys.exit(1)
	print("GPU "+str(gpu_idx)+" @ "+address+" and uuid="+uuid+" ("+name+")")

sys.exit(0)

